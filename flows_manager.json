[
   {
      "id":"bcd961bc.69f3c",
      "type":"tab",
      "label":"Configure",
      "disabled":false,
      "info":"Fill in the injector with your trap.nz credential\nThis will be saved in the file.\nIn future when the flow is triggered the credentials will be read from the file.\n"
   },
   {
      "id":"4240ce37.844f6",
      "type":"tab",
      "label":"Subscribe Sensors",
      "disabled":false,
      "info":""
   },
   {
      "id":"dc3ca54.c59df58",
      "type":"tab",
      "label":"TrapNZ Oauth",
      "disabled":false,
      "info":""
   },
   {
      "id":"3c946eed.de5152",
      "type":"tab",
      "label":"Send Sensor Records",
      "disabled":false,
      "info":""
   },
   {
      "id":"b27eab69.f45eb8",
      "type":"mqtt-broker",
      "z":"",
      "name":"mqtt-input",
      "broker":"localhost",
      "port":"1883",
      "clientid":"",
      "usetls":false,
      "compatmode":true,
      "keepalive":"60",
      "cleansession":true,
      "birthTopic":"",
      "birthQos":"0",
      "birthPayload":"",
      "closeTopic":"",
      "closeQos":"0",
      "closePayload":"",
      "willTopic":"",
      "willQos":"0",
      "willPayload":""
   },
   {
      "id":"6e4f2304.3f3ddc",
      "type":"http request",
      "z":"dc3ca54.c59df58",
      "name":"OAuthLogin",
      "method":"POST",
      "ret":"obj",
      "url":"https://api.trap.nz/oauth/token",
      "tls":"",
      "x":350,
      "y":540,
      "wires":[
         [
            "6e8b1e10.536e1"
         ]
      ]
   },
   {
      "id":"43fa5234.47a30c",
      "type":"function",
      "z":"dc3ca54.c59df58",
      "name":"Set Message Header",
      "func":"msg.headers = {'content-type':'application/x-www-form-urlencoded'};\nreturn msg;\n",
      "outputs":1,
      "noerr":0,
      "x":140,
      "y":560,
      "wires":[
         [
            "6e4f2304.3f3ddc",
            "493cd9fb.761978"
         ]
      ]
   },
   {
      "id":"493cd9fb.761978",
      "type":"http request",
      "z":"dc3ca54.c59df58",
      "name":"get-X-CSRF-Token",
      "method":"GET",
      "ret":"txt",
      "url":"https://api.trap.nz/session/token",
      "tls":"",
      "x":350,
      "y":600,
      "wires":[
         [
            "ad58a5b6.c1a848"
         ]
      ]
   },
   {
      "id":"ad58a5b6.c1a848",
      "type":"function",
      "z":"dc3ca54.c59df58",
      "name":"ReformatCSRFToken",
      "func":"var newMsg = { payload:{\"csrf-token\": msg.payload }};\nnewMsg.topic = \"credentials\";\nreturn newMsg;",
      "outputs":1,
      "noerr":0,
      "x":340,
      "y":700,
      "wires":[
         [
            "6e8b1e10.536e1"
         ]
      ]
   },
   {
      "id":"6e8b1e10.536e1",
      "type":"join",
      "z":"dc3ca54.c59df58",
      "name":"",
      "mode":"custom",
      "build":"merged",
      "property":"payload",
      "propertyType":"msg",
      "key":"topic",
      "joiner":"\\n",
      "joinerType":"str",
      "accumulate":false,
      "timeout":"",
      "count":"2",
      "reduceRight":false,
      "reduceExp":"",
      "reduceInit":"",
      "reduceInitType":"",
      "reduceFixup":"",
      "x":570,
      "y":600,
      "wires":[
         [
            "d19cfb9d.d3efa8",
            "3d58e360.37d79c"
         ]
      ]
   },
   {
      "id":"f20b4809.a140e8",
      "type":"file in",
      "z":"dc3ca54.c59df58",
      "name":"Read Credentials",
      "filename":"/etc/trapnz.json",
      "format":"utf8",
      "chunk":false,
      "sendError":false,
      "x":170,
      "y":340,
      "wires":[
         [
            "47ce3a35.629284"
         ]
      ]
   },
   {
      "id":"2851b37f.bc333c",
      "type":"link in",
      "z":"dc3ca54.c59df58",
      "name":"TrapNZ Oauth",
      "links":[
         "388eae47.cfb462"
      ],
      "x":95,
      "y":220,
      "wires":[
         [
            "f20b4809.a140e8",
            "e698b5be.a62d88",
            "3d58e360.37d79c"
         ]
      ]
   },
   {
      "id":"8b11639f.2d85a",
      "type":"mqtt in",
      "z":"4240ce37.844f6",
      "name":"Trap-Sprung-Event",
      "topic":"rat-trap1-out/+/1/1/+/+",
      "qos":"0",
      "broker":"b27eab69.f45eb8",
      "x":130,
      "y":240,
      "wires":[
         [
            "4e0b0a98.a81de4",
            "adf94153.560b4"
         ]
      ]
   },
   {
      "id":"adf94153.560b4",
      "type":"function",
      "z":"4240ce37.844f6",
      "name":"Build Sensor Report",
      "func":"//TOPIC_PREFIX/NODE-ID/SENSOR-ID/CMD-TYPE/ACK-FLAG/SUB-TYPE\nvar newMsg = {topic:\"sensor_report\"};\n//Combine TOPIC_PREFIX and NODE-ID to make sensor_id\nvar field_sensor_id = msg.topic.split(\"/\");\n    field_sensor_id = field_sensor_id.slice(0,2);\n    field_sensor_id = field_sensor_id.join(\"-\");\n\n//Figure out the event type\nvar event_type = msg.topic.split(\"/\");\nvar field_sensor = \"Unknown\";\nvar field_battery_voltage = 0;\nvar field_event\nswitch (event_type[2]){\n    \n    case \"1\":\n    //If SENSOR-ID is 1 then is a \"Sprung\" event\n        field_sensor = \"Trap\";\n        switch (msg.payload){\n            case \"0\":\n                field_event = \"Set\";\n                break;\n            default:\n                field_event = \"Sprung\";\n                \n        }\n        break;\n    case \"201\":\n    //If SENSOR-ID is 201 then it is a \"Heartbeat\" event\n        field_sensor = \"Heartbeat\";\n        field_event = \"Heartbeat\";\n    //If its a \"Heartbeat\" event then read the battery voltage.\n        field_battery_voltage = msg.payload;\n        break;\n    default:\n    field_event = event_type[2];\n    \n}\n\nvar event_date = new Date();\n//event_date = event_date.toISOString();\nevent_date = event_date.toJSON();\nevent_date = event_date.substring(0,19);\n\nif (field_sensor == \"Trap\"){\n    var newMsg = { \n        topic:field_event, \n        payload:\n        {\n             \"_links\": { \"type\": {\"href\": \"https://api.trap.nz/rest/type/node/sensor_report\"}}, \n             \"type\":[{\"target_id\":\"sensor_report\"}],\n             \"field_sensor_id\":[{\"value\":field_sensor_id}],\n             \"field_event\":[{\"value\":field_event}],\n             \"field_date\":[{\"value\":event_date}]\n        }\n\n    };\n}\nif (field_event == \"Heartbeat\"){\n    var newMsg = { \n        topic:field_event,\n        payload:\n        {\n             \"_links\": { \"type\": {\"href\": \"https://api.trap.nz/rest/type/node/sensor_report\"}}, \n             \"type\":[{\"target_id\":\"sensor_report\"}],\n             \"field_sensor_id\":[{\"value\":field_sensor_id}],\n             \"field_battery_voltage\":[{\"value\":field_battery_voltage}],\n             \"field_event\":[{\"value\":field_event}],\n             \"field_date\":[{\"value\":event_date}]\n        } \n    };\n}\n\n\nreturn newMsg;\n\n/*{\n    \"_links\": { \"type\": { \"href\": \"https://api.trap.nz/rest/type/node/sensor_report\" } },\n    \"type\":[{\"target_id\":\"sensor_report\"}],\n    \"field_sensor_id\": [{\"value\": \"0010\"}], \n    \"field_event\":[{\"value\": \"Vibration\"}],\n    \"field_date\":[{\"value\": \"2018-05-11T10:00:00\"}],\n    \"field_battery_voltage\":[{\"value\": 1.2}],\n    \"field_rssi\":[{\"value\": 3}],\n    \"field_snr\":[{\"value\": 1.4}]\n} */",
      "outputs":1,
      "noerr":0,
      "x":440,
      "y":260,
      "wires":[
         [
            "781f25f4.dcba0c"
         ]
      ]
   },
   {
      "id":"52f100ea.13efc",
      "type":"comment",
      "z":"4240ce37.844f6",
      "name":"MQTT messages",
      "info":"Node Red will subscribe to messages from an MQTT broker\nConfigure your connection to the MQTT broker here.\nThe two MQTT inputs are listening for events based on the MySensors framework https://www.mysensors.org/\nEssentially the trap sensor is the same as a door sensor composed of a reed switch and a magnet, when the trap is sprung it will trigger an interupt on the remote sensor because of a state change.\nThe remote sensor also wakes up at regular intervals to send a heartbeat message along with its battery voltage so we get some assurance that it is alive and well event if the sensor isnt sensing anything.\n\nThere's a debug node on here which you can switch on to examine the raw MQTT messages coming in. The layout of the MQTT message has some notes below so you can decode it by eye.\n\nThe function Build Sensor Report takes the MQTT message and starts building the JSON structure we need to submit to trap.nz for their REST API.\nThe topic of the message is arbitrarily set to \"event\" before passing over to the OAuth tab\n\nTOPIC_PREFIX/NODE-ID/SENSOR-ID/CMD-TYPE/ACK-FLAG/SUB-TYPE\n\nCMD-TYPE\n  C_SET=1\n  C_INTERNAL=3\n\nSET-SUB-TYPE\n\tS_DOOR= 0,\t//!< Door sensor, V_TRIPPED, V_ARMED\n\tS_MOTION= 1,\t//!< Motion sensor, V_TRIPPED, V_ARMED\n\tS_BINARY= 3,\t//!< Binary light or relay, V_STATUS, V_WATT\n\nSET-VALUES\nV_ARMED\t= 15,\t//!< S_DOOR, S_MOTION, S_SMOKE, S_SPRINKLER. Armed status of a security sensor. 1 = Armed, 0 = Bypassed\nV_TRIPPED = 16,\t//!< S_DOOR, S_MOTION, S_SMOKE, S_SPRINKLER, S_WATER_LEAK, S_SOUND, S_VIBRATION, S_MOISTURE. Tripped status of a security sensor. 1 = Tripped, 0\nV_VOLTAGE = 38,\t//!< S_MULTIMETER Battery Voltage\n\n\nINTERNAL-SUBTYPE\nINTERNAL Messages\n    I_BATTERY_LEVEL\t\t\t\t= 0,\t//!< Battery level percent\n\tI_HEARTBEAT_REQUEST\t\t\t= 18,\t//!< Heartbeat request\n\tI_HEARTBEAT_RESPONSE\t\t= 22,\t//!< Heartbeat response\n\tI_SIGNAL_REPORT_REQUEST\t\t= 29,\t//!< Device signal strength request\n\tI_SIGNAL_REPORT_REVERSE\t\t= 30,\t//!< Internal\n\tI_SIGNAL_REPORT_RESPONSE\t= 31,\t//!< Device signal strength response (RSSI)\n\tI_PRE_SLEEP_NOTIFICATION\t= 32,\t//!< Message sent before node is going to sleep\n\tI_POST_SLEEP_NOTIFICATION\t= 33\t//!< Message sent after node woke up (if enabled)",
      "x":440,
      "y":60,
      "wires":[

      ]
   },
   {
      "id":"d8d8cd0e.7c8f1",
      "type":"mqtt in",
      "z":"4240ce37.844f6",
      "name":"Trap-Battery-Voltage",
      "topic":"rat-trap1-out/+/201/1/0/38",
      "qos":"2",
      "broker":"b27eab69.f45eb8",
      "x":130,
      "y":300,
      "wires":[
         [
            "4e0b0a98.a81de4",
            "adf94153.560b4"
         ]
      ]
   },
   {
      "id":"4e0b0a98.a81de4",
      "type":"debug",
      "z":"4240ce37.844f6",
      "name":"Interesting-Messages",
      "active":true,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "x":440,
      "y":160,
      "wires":[

      ]
   },
   {
      "id":"388eae47.cfb462",
      "type":"link out",
      "z":"4240ce37.844f6",
      "name":"Go and log it",
      "links":[
         "2851b37f.bc333c"
      ],
      "x":855,
      "y":260,
      "wires":[

      ]
   },
   {
      "id":"781f25f4.dcba0c",
      "type":"change",
      "z":"4240ce37.844f6",
      "name":"Change the topic to event",
      "rules":[
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"event",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":670,
      "y":260,
      "wires":[
         [
            "388eae47.cfb462"
         ]
      ]
   },
   {
      "id":"2173f927.88d8c6",
      "type":"debug",
      "z":"dc3ca54.c59df58",
      "name":"Raw Credentials",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "x":700,
      "y":260,
      "wires":[

      ]
   },
   {
      "id":"e698b5be.a62d88",
      "type":"debug",
      "z":"dc3ca54.c59df58",
      "name":"Event",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "x":250,
      "y":260,
      "wires":[

      ]
   },
   {
      "id":"47ce3a35.629284",
      "type":"json",
      "z":"dc3ca54.c59df58",
      "name":"",
      "property":"payload",
      "action":"",
      "pretty":false,
      "x":330,
      "y":340,
      "wires":[
         [
            "d8770cd7.16169"
         ]
      ]
   },
   {
      "id":"d8770cd7.16169",
      "type":"change",
      "z":"dc3ca54.c59df58",
      "name":"Change Topic to credentials",
      "rules":[
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"credentials",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":520,
      "y":340,
      "wires":[
         [
            "2173f927.88d8c6",
            "43fa5234.47a30c"
         ]
      ]
   },
   {
      "id":"d19cfb9d.d3efa8",
      "type":"debug",
      "z":"dc3ca54.c59df58",
      "name":"Authentication Tokens",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "x":780,
      "y":600,
      "wires":[

      ]
   },
   {
      "id":"3d58e360.37d79c",
      "type":"join",
      "z":"dc3ca54.c59df58",
      "name":"Combine Event and Authentication",
      "mode":"custom",
      "build":"object",
      "property":"payload",
      "propertyType":"msg",
      "key":"topic",
      "joiner":"\\n",
      "joinerType":"str",
      "accumulate":false,
      "timeout":"",
      "count":"2",
      "reduceRight":false,
      "reduceExp":"",
      "reduceInit":"",
      "reduceInitType":"",
      "reduceFixup":"",
      "x":1020,
      "y":220,
      "wires":[
         [
            "103d9c7c.d3c324"
         ]
      ]
   },
   {
      "id":"4ea76371.4b676c",
      "type":"debug",
      "z":"3c946eed.de5152",
      "name":"Combined Message",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "x":300,
      "y":260,
      "wires":[

      ]
   },
   {
      "id":"39ee02da.5212ae",
      "type":"link out",
      "z":"dc3ca54.c59df58",
      "name":"",
      "links":[
         "d1fc53b1.6ae38"
      ],
      "x":1000,
      "y":440,
      "wires":[

      ]
   },
   {
      "id":"d1fc53b1.6ae38",
      "type":"link in",
      "z":"3c946eed.de5152",
      "name":"Send-Sensor-Records",
      "links":[
         "39ee02da.5212ae"
      ],
      "x":135,
      "y":180,
      "wires":[
         [
            "ef4e5a7f.c30718"
         ]
      ]
   },
   {
      "id":"103d9c7c.d3c324",
      "type":"change",
      "z":"dc3ca54.c59df58",
      "name":"Change Topic to Sensor_Payload",
      "rules":[
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"sensor_payload",
            "tot":"str"
         },
         {
            "t":"delete",
            "p":"headers",
            "pt":"msg"
         },
         {
            "t":"delete",
            "p":"filename",
            "pt":"msg"
         },
         {
            "t":"delete",
            "p":"statusCode",
            "pt":"msg"
         },
         {
            "t":"delete",
            "p":"responseUrl",
            "pt":"msg"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":1020,
      "y":320,
      "wires":[
         [
            "39ee02da.5212ae"
         ]
      ]
   },
   {
      "id":"ef4e5a7f.c30718",
      "type":"function",
      "z":"3c946eed.de5152",
      "name":"Set up the payload",
      "func":"var bearer = \"Bearer \"+msg.payload.credentials.access_token;\n\n\nmsg.headers = {\n    'Content-Type': 'application/hal+json',\n    'Authorization': bearer,\n    'Cache-Control': 'no-cache',\n    'accept': 'application/hal+json'\n};\n\nmsg.payload = msg.payload.event;\n\nreturn msg;\n",
      "outputs":1,
      "noerr":0,
      "x":290,
      "y":180,
      "wires":[
         [
            "4ea76371.4b676c",
            "80f72577.188a38"
         ]
      ]
   },
   {
      "id":"80f72577.188a38",
      "type":"http request",
      "z":"3c946eed.de5152",
      "name":"Post Reading",
      "method":"POST",
      "ret":"obj",
      "url":"https://api.trap.nz/entity/node?_format=json",
      "tls":"",
      "x":520,
      "y":180,
      "wires":[
         [
            "d0756b49.d8a4a8"
         ]
      ]
   },
   {
      "id":"d0756b49.d8a4a8",
      "type":"debug",
      "z":"3c946eed.de5152",
      "name":"Returned Result",
      "active":true,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "x":640,
      "y":260,
      "wires":[

      ]
   },
   {
      "id":"a6ad0a44.dc3e38",
      "type":"inject",
      "z":"bcd961bc.69f3c",
      "name":"Trap.NZ Credentials",
      "topic":"credentials",
      "payload":"{\"grant_type\":\"password\",\"client_id\":\"client id\",\"client_secret\":\"client secret\",\"username\":\"user.name\",\"password\":\"yourpassword\"}",
      "payloadType":"json",
      "repeat":"",
      "crontab":"",
      "once":false,
      "onceDelay":"",
      "x":230,
      "y":160,
      "wires":[
         [
            "cfe562e0.18ddd"
         ]
      ]
   },
   {
      "id":"439d3acb.2fc1c4",
      "type":"file",
      "z":"bcd961bc.69f3c",
      "name":"save creds",
      "filename":"/etc/trapnz.json",
      "appendNewline":false,
      "createDir":false,
      "overwriteFile":"true",
      "x":610,
      "y":160,
      "wires":[

      ]
   },
   {
      "id":"cfe562e0.18ddd",
      "type":"json",
      "z":"bcd961bc.69f3c",
      "name":"",
      "property":"payload",
      "action":"str",
      "pretty":true,
      "x":410,
      "y":160,
      "wires":[
         [
            "439d3acb.2fc1c4"
         ]
      ]
   },
   {
      "id":"5a2176a2.582638",
      "type":"comment",
      "z":"bcd961bc.69f3c",
      "name":"Instructions",
      "info":"Edit the Trap.NZ Credentials inject item and fill in your own credentials.\nDeploy and click the Trap.NZ to save your credentials to a file.\nThis file is referenced in the TrapNZ Oauth flow so if you change the location, be sure to update it there too.",
      "x":190,
      "y":80,
      "wires":[

      ]
   },
   {
      "id":"2e0fffdb.b8d48",
      "type":"comment",
      "z":"dc3ca54.c59df58",
      "name":"Preparing for authentication to Trap.NZ",
      "info":"Before a sensor event can be passed to trap.nz API we need to log in and get an authorization token.\nThe message containing the sensor reading from the Subscribe Sensor tab is passed to a join node where it waits for then combined with the header message containing the authorization token.\n\nTo authorize first we need to read the credentials from a file containing a JSON structure with the credentials. This should have been populated from the Configure tab at the first step\nThe credentials then go through a step to prepare a POST request to the API which returns the authorization token and a refresh token.\nAt the time of writing there is also a CSRF token but this may soon be deprecated or not required for this integration.\nThe authorization token and csrf token are combine into a message which is then passed back up to be combined with the sensor reading message.\n\nThe combined message is the gets cleaned up and some values that are not required are removed.\n\nFinally the message gets passed to the last tab to be submitted to the trap.nz API",
      "x":690,
      "y":60,
      "wires":[

      ]
   },
   {
      "id":"4dd385c.7bcd17c",
      "type":"comment",
      "z":"3c946eed.de5152",
      "name":"Sending the payload",
      "info":"We are nearly there.\nThe message from the previous tab should contain an Authorization token as well as a sensor message to send on its way.\nThe function builds the headers to be sent to the API and moves the sensor payload where it ought to go.\n\nNext the message is sent to the trap.nz API with a POST request\ntrap.nz API will return a JSON object with some information in it that you can examine with the debug node if you like.\nThis might be a good place to put some error handling or return acknowlegement back to an MQTT broker in the future.\n\nFinished",
      "x":210,
      "y":60,
      "wires":[

      ]
   },
   {
      "id":"573326ef.ae3158",
      "type":"mqtt in",
      "z":"4240ce37.844f6",
      "name":"All the things",
      "topic":"rat-trap1-out/+/+/3/0/+",
      "qos":"0",
      "broker":"b27eab69.f45eb8",
      "x":110,
      "y":360,
      "wires":[
         [
            "c2c68b9d.365268"
         ]
      ]
   },
   {
      "id":"c2c68b9d.365268",
      "type":"debug",
      "z":"4240ce37.844f6",
      "name":"Internal Messages",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "x":420,
      "y":380,
      "wires":[

      ]
   }
]
